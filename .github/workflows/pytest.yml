name: test

on: push

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install project
        run: poetry install --no-interaction
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run tests
        run: poetry run coverage run -m pytest && poetry run coverage report -m

      #- name: Coverage Badge
      - name: coverage-badge -o coverage.svg
        uses: tj-actions/coverage-badge-py@v2


      # # ----------------------------------------------
      # #              Delete Coverage Badge
      # # ----------------------------------------------
   
      # - name: Delete Existing Badge
      #   run: |
      #     rm -f coverage.svg

      #     # Commit the deleting
          
      #     git config user.name "GitHub Actions"
      #     git config user.email "actions@github.com"
      #     git add coverage.svg
      #     git commit -m "delete old coverage badge file"
      #     git push
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      
      # #----------------------------------------------
      # #              Generate Coverage Badge
      # #----------------------------------------------

      # - name: Generate Coverage Badge
      #   run: |
      #     # Generate the coverage badge
          
      #     coverage-badge -o coverage.svg

      #     # Commit the generated badge to the repository
      #     git config user.name "GitHub Actions"
      #     git config user.email "actions@github.com"
      
      #     git add coverage.svg
      #     git commit -m "Update coverage badge"
      #     git push
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}


      #----------------------------------------------
      #              Update Coverage Badge URL
      #----------------------------------------------

      - name: Update README with Coverage Badge
        run: |
          # Generate the badge URL (e.g., Codecov)
          COVERAGE_BADGE_URL="coverage.svg" 

          # Update the README with the new badge
          echo '<img src="coverage.svg" alt="Coverage Badge">' > README.md

          # Commit and push the changes
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add README.md
          git commit -m "Update URL coverage badge"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

        
